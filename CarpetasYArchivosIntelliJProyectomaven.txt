1).IDEA: Se trata de una carpeta de IntelliJ que contiene archivos para poder correr y debuguear programas
2).gitignore: Es un archivo que le dice a git qué archivos ignorar si se cambian. Generalmente aqui van archivos propios de los IDEs, como la carpeta .IDEA 
3)mvnw y mvnw.cmd : Permiten ejecutar comandos maven desde la linea de comandos (./mvnw clean install por ejemplo (notar la diferencia con mvn clean install)), NO desde el IDE. mvnw es para linux y mvnw.cmd es para windows.
Básicamente lo que hacen estos comandos es gestionar maven desde la linea de comandos con la versión que está en maven-wrapper properties, ya sea para gestionar librerias o para construir el proyecto.

https://maven.apache.org/wrapper/

4)MAVEN WRAPPER
The Maven Wrapper is an easy way to ensure a user of your Maven build has everything necessary to run your Maven build.

Why might this be necessary? Maven to date has been very stable for users, is available on most systems or is easy to procure: but with many of the recent changes in Maven it will be easier for users to have a fully encapsulated build setup provided by the project. With the Maven Wrapper, this is very easy to do and it's a great idea and initial implementation borrowed from Gradle.

The easiest way to setup the Maven Wrapper for your project is to use the Maven Wrapper Plugin with its provided wrapper goal. To add or update all the necessary Maven Wrapper files to your project execute the following command:

mvn wrapper:wrapper
Normally you instruct users to install a specific version of Apache Maven, put it on the PATH and then run the mvn command like the following:

mvn clean install
But now, with a Maven Wrapper setup, you can instruct users to run wrapper scripts:

./mvnw clean install
or on Windows

mvnw.cmd clean install
A normal Maven build will be executed, with the one important change that if the user doesn't have the necessary version of Maven specified in .mvn/wrapper/maven-wrapper.properties it will be downloaded for the user first, installed and then used.

Subsequent uses of mvnw/mvnw.cmd use the previously downloaded, specific version as needed.

5)TARGET
Contiene todo lo necesario para que el proyecto sea desplegado, es decir el archivo .jar del proyecto y los archivos .class correspondientes a cada archivo .java del codigo fuente en src

6)SETTINGS
Se trata de una carpeta de Eclipse que contiene archivos para poder correr y debuguear programas

7)PROJECT Y CLASSPATH
Es un archivo de eclipse

HELP.md
target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**
!**/src/test/**

### ECLIPSE ###
.apt_generated
.classpath
.factorypath
.project
.settings
.springBeans
.sts4-cache

### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr

### NetBeans ###
/nbproject/private/
/nbbuild/
/dist/
/nbdist/
/.nb-gradle/
build/

### VS Code ###
.vscode/
