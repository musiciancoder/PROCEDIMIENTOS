Se ocupan en clases tipo entidad para hacer validaciones, pero por si solo esto no basta para validar, ya que se debe agregar @Value y Binding result en el controlador

@NotBlank -->ni nulo ni espacio en blanco. Es el mas completo, porque cubre todos los casos
@NotNull -->no nulo (se ocupa en tipos distinto a string)
@NotEmpty -->Se ocupa solo para validar strings. ""-->no lo acepta; " " (espacio en blanco)-->si lo acepta

Ejemplo:


package org.adiaz.springcloud.msvc.usuarios.models.entity;

import javax.persistence.*;
import javax.validation.constraints.Email;
import javax.validation.constraints.NotEmpty;

@Entity
@Table(name="usuarios")
public class Usuario {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @NotEmpty //solo para strings, para los demas tipos se ocupa @NotNull
    private String nombre;

    @Column(unique = true)
    @Email
    private String email;

    @NotEmpty
    private String password;

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getNombre() {
        return nombre;
    }

    public void setNombre(String nombre) {
        this.nombre = nombre;
    }

    public String getEmail() {
        return email;
    }

    public void setEmail(String email) {
        this.email = email;
    }

    public String getPassword() {
        return password;
    }

    public void setPassword(String password) {
        this.password = password;
    }
}

