				<!-- CON th:object="${vacante} VINCULAMOS EL FORMULARIO CON LA CLASE DE MODELO VACANTE -->
				<form th:action="@{/vacantes/save}" method="post"
					th:object="${vacante}">

					<!-- CONTROL DE ERRORES EN INGRESO DE DATOS EN EL FORMULARIO -->
					<div th:if="${#fields.hasErrors('*')}" class='alert alert-danger'
						role='alert'>
						Por favor corrija los siguientes errores:
						<ul>
							<li th:each="err : ${#fields.errors('*')}" th:text="${err}" />
						</ul>
					</div>







///////////

package net.itinajero.controller;

import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.propertyeditors.CustomDateEditor;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.validation.ObjectError;
import org.springframework.web.bind.WebDataBinder;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.InitBinder;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

import net.itinajero.modelo.Vacante;
import net.itinajero.service.IVacantesService;

@Controller
@RequestMapping("/vacantes")
public class VacantesController {

	// INYECCION DE DEPENDENCIAS
	@Autowired
	private IVacantesService serviceVacantes;
	
	@GetMapping("/index")
	public String mostrarIndex(Model model) {
	List <Vacante> lista= serviceVacantes.buscarTodas();
	model.addAttribute("listaDeVacantes", lista);
		
		return "vacantes/listVacantes";
		
	}

	@GetMapping("/create")
	public String crear () { //Se pasa como argumento un objeto de la clase modelo, esto (conjuntamente con la anotacion th:object="${vacante}" en el formulario) tiene como funcion vincular el formulario con la clase modelo Vacante. Es necesario, sino la app se cae 

		return "vacantes/formVacante";
	}

	/*
	 * METODO Q SE EJECUTA AL HACER CLICK EN BOTON GUARDAR, EN FORMULARIO PARA CREAR
	 * VACANTE; ASI SE HACE CON SPRING BOOT !!
	 */
	@PostMapping("/save")
	public String guardar(Vacante vacante,  BindingResult result) { // notese que no se usa @RequestParam, solo basta con un objeto de la clase
												// modelo (Vacante en este caso). BINDING RESULT tiene los metodos para control de errores en formularios (por ejemplo si se escribe un String en ve
		/*
		 * if (result.hasErrors()) { for (ObjectError error: result.getAllErrors()){
		 * System.out.println("Ocurrio un error: " + error.getDefaultMessage()); }
		 * return "vacantes/formVacante"; }
		 */

		serviceVacantes.guardar(vacante);
		System.out.println("Vacante: " + vacante);

		return "vacantes/listVacantes";
	}
	/*
	 * METODO Q SE EJECUTA AL HACER CLICK EN BOTON GUARDAR, EN FORMULARIO PARA CREAR
	 * VACANTE; ASI SE HACE CON SPRING MVC, PERO NO CON SPRING BOOT
	 * 
	 * @PostMapping("/save") public String guardar(@RequestParam("nombre") String
	 * nombre, @RequestParam("descripcion") String descripcion ){
	 * System.out.println("Nombre: " + nombre); System.out.println("Descripcion :" +
	 * descripcion);
	 * 
	 * 
	 * return "vacantes/listVacantes"; }
	 */

	@GetMapping("/delete") // para llamar con vacantes/delete?id=3, por ejemplo. Notese que el nombre del
							// atributo Si viaja junto al valor de este. Al pasar el mouse por encima del
							// link SI se ve la url a la que nos dirigira si lo presionamos
	public String eliminar(@RequestParam("id") int idVacante, Model model) { // @RequestParam es mas apropiado para
																				// manipular bases de datos a traves de
																				// botones en nuestras vistas html
		System.out.println("Eliminando vacante con id :" + idVacante);
		model.addAttribute("id", idVacante);
		return "mensaje";
	}

	@GetMapping("/view/{id}") // para llamar con vacantes/view/3, por ejemplo. Notese que el nombre del
								// atributo NO viaja, solo el valor de este. Al pasar el mouse por encima del
								// link NO se ve nada
	public String verDetalle(@PathVariable("id") int idVacante, Model model) { // @PathVariable es mas apropiado para
																				// expandir y renderizar detalles de un
																				// objeto

		Vacante vacante = serviceVacantes.buscarPorId(idVacante);

		System.out.println("Vacante: " + vacante);
		model.addAttribute("vacante", vacante);
		// TODO Buscar los datos de la vacante en la BBDD

		return "detalle";

	}

	// @InitBinder permite customizar el formato de entrada de algun dato (en este
	// caso la fecha del formulario)
	@InitBinder
	public void initBinder(WebDataBinder webDataBinder) {
		SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy");
		webDataBinder.registerCustomEditor(Date.class, new CustomDateEditor(dateFormat, false));
	}

}


//LISTVACANTES

<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org">

    <!-- Bootstrap core CSS -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="bootstrap/css/jumbotron.css" rel="stylesheet">
    <link href="bootstrap/css/sticky-footer-navbar.css" rel="stylesheet">
    <link href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css" rel="stylesheet" >
    <link rel="stylesheet"
	href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"
	integrity="sha384-Vkoo8x4CGsO3+Hhxv8T/Q5PaXtkKtu6ug5TOeNV6gBiFeWPGFN9MuhOf23Q9Ifjh"
	crossorigin="anonymous">

  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="">
    <meta name="author" content="">
    <link rel="icon" href="favicon.ico">

    <title>EmpleosApp | Listado de Ofertas de Trabajo</title>
    <!-- Bootstrap core CSS -->
    <link href="bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <!-- Custom styles for this template -->
    <link href="bootstrap/css/jumbotron.css" rel="stylesheet">
    <link href="bootstrap/css/sticky-footer-navbar.css" rel="stylesheet">
    <link href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" rel="stylesheet">
  </head>

  <body>

    <header>
    
    <!-- PEDAZO DE CODIGO EXTERNO CON LAYOUTS -->
<div th:insert="fragments/menu.html :: menu-principal"></div>
    </header>

    <main role="main">     
      <hr>
      <div class="container"> 

        <div class="card">
          <h4 class="card-header"><strong>Listado de Ofertas de Trabajo</strong></h4>              
          <div class="card-body">
            <a class="btn btn-primary" href="#" title="Crear nueva Oferta de Trabajo" role="button"><i class="fas fa-file" aria-hidden="true"></i> Nueva</a>            
            <hr>
            <table class="table table-hover text-center">
              <thead class="thead-light">
                <tr>
                  <th scope="col">Categoría</th>
                  <th scope="col">Nombre</th>                  
                  <th scope="col">Fecha Pub.</th>
                  <th scope="col">Estatus</th>
                  <th scope="col">Destacada</th>
                  <th scope="col">Operaciones</th>
                </tr>
              </thead>
              
              <tbody class="table text-center">
                <tr th:each="miVariable:${listaDeVacantes}">
<!--                   <td>${miVariable.nombre}</td>
                  <td>Supervisor de Ventas</td>                  
                  <td>11-01-2019</td>
                  <td>Creada</td>
                  <td>SI</td>
                  <td>
                    <a href="#" class="btn btn-success btn-sm" role="button" title="Editar el registro."><i class="fas fa-pencil-alt" aria-hidden="true"></i></a>
                    <a href="#" onclick="return confirm('¿Estas seguro?')" class="btn btn-success btn-sm" role="button" title="Eliminar el registro."><i class="fas fa-trash" aria-hidden="true"></i></a>
                  </td> -->
                  			<td th:text="${miVariable.nombre}"></td>
			<td th:text="${miVariable.descripcion}"></td>
			<td th:text="${miVariable.fecha}"></td>
			<td th:text="${miVariable.salario}"></td>
			<!-- 			<td th:text="${miVariable.de}"></td> -->
			<!-- <td th:text="${miVariable.de==1?'Si':'No'}"></td> -->
			<td><span th:if="${miVariable.de==1}"
				class="badge badge-success">Si</span> 
				<span
				th:unless="${miVariable.de==1}" class="badge badge-danger">No</span>
			</td>
			<td>
			<!-- LINK RECIBIDO EN EL CONTROLADOR CON @PATHVARIABLE -->
			<a th:href="@{/vacantes/view/{id} (id=${miVariable.id})}" class="btn btn-success">Detalle</a> 
		
			<!-- LINK RECIBIDO EN EL CONTROLADOR CON @REQUESTPARAM -->
			<a th:href="@{/vacantes/delete(id=${miVariable.id})}" class="btn btn-danger">Borrar</a>
			</td>
                </tr>
               
                               
              </tbody>
            </table>
            
          </div>
        </div>
      </div> <!-- /container -->

    </main>

<!-- PEDAZO DE CODIGO EXTERNO CON LAYOUTS -->
<div th:insert="fragments/footer.html :: pie-pagina"></div>

    <!-- Bootstrap core JavaScript
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="bootstrap/js/bootstrap.min.js"></script>     
  </body>
</html>