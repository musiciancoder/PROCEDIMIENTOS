Esto sirve para pasar props a cualquier elemento nieto directamente, sin pasarprops el hijo necesariamente

1.Crear un NombreContext.js, que contiene lo siguiente: (context1 en templates)

import React, { createContextÂ } from 'react';
import axios from 'axios';

// Crear el Context
export const NombreContext = createContext();

// Provider es donde se encuentran las funciones useState (para state) y useffect (para llamados a API)
const NombreProvider = (props) => {

 
    return (
        <NombreContext.Provider
            value={{   //valor es lo que queremos utilizar en los componentes
               valor 
            }}
        >
            {props.children}
        </NombreContext.Provider>
    )
}
export default NombreProvider;


2.Usar el context como wrapper en App.js

import NombreProvider from './context/NombreContext'

<NombreProvider>

todo el codigo

</NombreProvider>


3.En el componente que deseamos ocupar el context, escribir

import React, {useContext} from 'react';

const{valor}=useContext(NombreContext); //con esto extraemos el valor




