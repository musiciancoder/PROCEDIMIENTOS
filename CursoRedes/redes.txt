INTERNET:
Cada organización posee redes internas (como red de EIQ, red de Facebook, red de Google, etc., cada una con su grupo de servidores). Se puede decir que internet es una "red de redes internas" en la que se comunican por ejemplo la red EIQ con la red Google.

MODEM VS ROUTER
El modem es el dispositivo físico con el que el proveedor de internet nos provee de una IP Publica para poder conectarnos a internet.
El router es el dispositivo físico con el que el proveedor de internet nos provee de una IP Privada para que cada equipo pueda conectarse a la red local seteada por el modem, ya que en teoría cada computador debiera estar conectado a un router.
IMPORTANTE: en el curso el español le llama "router" a un equipo tipo modem/router al mismo tiempo, es decir el equipo que proporciona la IPPublica de la red local e IPPrivada para cada equipo. En la actualidad, la mayoría de losequipos son de tipo
modem/router, incluyendo el de mi casa (es el q esta donde mi mamá, ya que los chicos son los decos q sirven solo para las teles).


SABER MIS DATOS DE CONECCION.
Se desaconseja el uso de ipconfig, porque muestra datos por defecto que han sido cambiados y ya no estan en uso, ademas muestra las conexiones de ethernet que confunden.

En vez de ello:
 ir a web miip.cl. Esto va a mostrar mi ip publica (recordar que yo tengo cgnat).
 luego ir en barra de direcciones a a miippublica.baf.movistar.cl. Ahi estan todos los datos.

IP PUBLICA:
IP (Internet Protocol) es la dirección de nuestra red en internet para poder recibir y enviar paquetes de informacion (remitente/destinatario. Es única e irrepetible en todo el mundo (al menos durante el tiempo que estemos conectados). La da el proveedor de internet mediante el router.



TIPOS DE IP: IPv4 (protocolo antiguo) e IPv6 (protocolo nuevo)

*IPv4

Es del tipo:
0-255.0-255.0-255.0-255
xxx.xxx.xxx.xxx 

Por ejemplo:127.212.14.86. Estas IPs el proveedor nos las puede cambiar, ya sea al reiniciar el router o bien cuando él quiera para optimizar IPs con usuarios que estan conectados. Vale decir que cuando apagamos el router nos quedamos sin IP.

WAN: comunica IP publica de origen (de google por ejemplo, 24.143.215.98) con IP publica de destino (red publica de la casa, por ejemplo 67.23.210.45).
Algo muy importante es que en la WAN (Wide Area Network) todos los equipos que estan conectados a la red publica de una casa (celulares, notebook, etc) funcionan con la misma IP publica (o sea  24.143.215.98). O sea la WAN es desde el router hacia afuera.
LAN: Local Area Network es la red de nuestra casa, o sea desde el router hacia adentro, hacia nuestros dispositivos como notebook, celulares, etc. A cada uno de estos dispositivos se le asigna una IP privada (por ejemplo notebook con IP Privada 192.168.1.10, xbox con IP Privada 192.168.1.11), que suelen ser muy parecidas entre ellas.
Si conectamos un computador directamente a la linea telefonica (año 2001 yo mismo lo hacia), el equipo no tiene IP privada, solo IP publica.

NAT: (Network Address Translation) es el paso desde nuestra red privada LAN a la red publica WAN y viceversa en una petición y es responsabilidad del Router.
Cuando mandamos una petición a Google desde nuestro computador, la IP de origen parte siendo la IP privada del computador (192.168.1.10, por ejemplo). Al pasar por el router este cambia la IP de origen para corresponda a la IP publica (67.23.210.4, por ejemplo) y pueda llegar mediante WAN a la IP destino de google (145.3.78.189, por ejemplo).
El servidor de google nos responde se vuelta con IP de origen 145.3.78.189 (notar q en el servidor IP origen e IP destino se intercambian) hacia nuestra IP destino 67.23.210.4 y el paquete pasa por nuestro router que esta vez cambia la IP de destino desde IP publica a IP privada (192.168.1.10) de nuestro computador, obteniendo la info en nuestro computador.
Gateway (puerta de enlace) es la IP de nuestro Router, cuyo ultimo digito siempre es unidad y no decena. Para el ejemplo anterior teniamos un computador con IP privada 192.168.10, que sería el primer equipo conectado a la red privada. Si tenemos un segundo dispositivo conectado (podría ser otro computador, un celular, un xbox, lo que sea) va a tener IP privada 192.168.11. El gateway en este caso va a ser 192.168.1.1 (en cambio el primer dispositivo conectado es 192.168.1.10). ).


*IPv6 
Es del tipo:
xxxx::xxxx:xxxx:xxxx:xxxx con letras y numeros, por lo que hay una cantidad bestial de IPv6, mucho mas que IPv4.
Surgió como una necesidad, ya q en un principio habia relativamente poca coneccion a internet y las IPv4 bastaban, pero luego fueron insuficientes, por lo q fue necesario un protocolo que brindara mas IPs.
A diferencia de IP4, en IPv6 cada dispositivo (notebook, celular, etc) cuenta con una IP publica asignada, por lo que se prescinde de IP privada para cada equipo y por tanto se prescinde tambien de NAT.
Actualmente coexisten ambos protocolos y la mayoría de los computadores usan ambos, ya que para pasar todo a IPv6 se tendrían que apagar todos los equipos que trabajan con IPv4 en el mundo y reiniciarlos con IPv6.

NOTA: para este curso y en un 90% de los casos en internet nos referiremos a IPv4 cuando hablemos de IP  a secas

DOMINIO:

Anatomy of a web Address:
The URL of this blog post is: https://blog.hubspot.com/website/what-is-a-domain
protocol ("https://")
domain name (o simplemente dominio) ("blog.hubspot.com")
subdomain ("blog.")
second-level domain ("hubspot")
top-level domain (".com")
subdirectory ("/website/")
path ("/what-is-a-domain")
hostname: hubspot.com
Naked domain
A naked domain is simply a domain address without the "www" prefix, such as google.com (naked) instead of www.google.com (non-naked). Therefore blog.hubspot.com is a naked domain

DNS:
Domain Name System
Es un sistema que es como una guia de teléfonos, que en vez de Nombre Propio - Numero de teléfono asocia Nombre de Dominio (o simplemente dominio, como wikipedia.org) con IP pública. Los subdominios NO asocian IP, solo dominios del tipo hostname (o sea dominio secundario (wikipedia)+ dominio superior (org)) pueden hacerlo, por lo que el IP de los dominios  cualquierCosa1.wikipedia.org y cualquierCosa2.wikipedia.org serán iguales siempre.
Naturalmente el usuario en la barra de direcciones no escribe una ip, sino un dominio, q es mas amigable para el usuario, pero por debajo siempre el computador busca la IP asociada a ese dominio mediante DNS.
Si no tenemos comprado ningun dominio (en go daddy por ejemplo), por defecto el dns de la LAN es el de la compañía de internet.
  
PUERTO:
Los puertos son números que asociamos a las aplicaciones de una máquina (notebook, por ejemplo) para poderlos identificar para que estas aplicaciones se puedan comunicar con el exterior.  
No es lo mismo que PID. Los puertos van desde 0 a 65.000.
Los servidores tienen asignado por defecto el pueto 80.
Un SOCKET es ippublica + puerto, bajo la sintaxis IP:puerto, y con ello nos podríamos comunicar por ejemplo con el servidor de amazon desde nuestro computador para hacer una compra, por ejemplo mediante firefox con 23.43.115.12:6520 (ip publica + puerto asignado a firefox).
En el ejemplo anterior, si deseamos comprar desde la app de amazon instalada en un celular sería con el socket 23.43.115.12:15214 (ip publica + puerto asignado a la app de amazon).
Puertos bien conocidos: del 0 al 1023. Para uso exclusivo de superusuario root (administrador).
Puertos registrados: 1024 - 49151. Para aplicaciones no críticas. Angular es el 4200 por ejemplo.
Puertos efimeros: 49152-65535. Son para pestañas de internet, por ejemplo. Cuando cerramos la pestaña el puerto se asigna a otra aplicacion.


En el ejemplo anterior de compra en amazon no hubo problemas con el socket 23.43.115.12:6520 ya que es solo un computador conectado a la red (ippublica 23.43.115.12) con una sola pestaña de firefox(puerto 6520), por lo tanto no debemos especificar nada. 
Supongamos ahora que en esa misma maquina abrimosuna segunda pestaña (sin cerrar la primera) para conectarnos a amazon (o a cualquier otro sitio web). Entonces se asignaria un nuevo puerto efimero y el socket de esta segunda coneccion sería 23.43.115.12:6521.  Acá tampoco hay problemas.
Pero supongamos ahora que en otra red (78.69.56.5), desde otro computador queremos conectarnos por medio de un ftp (fillezilla por ejemplo) a un servidor por medio del puerto 21.  El socket es  78.69.56.5:21.   Desde un segundo computador conectado a esta misma red de la casa se abre un filezilla para conectarnos al mismo servidor en interner. La red publica es siempre igual (no cambia), o sea 78.69.56.5. Por otro lado el segundo computador 
no sabe que el primer computador ya tiene ocupado el puerto 21, por lo que se lo asigna a filezilla. El socket de este segundo computador sería pues tambien 78.69.56.5:21.. Sin embargo, esto no puede ser posible, porque cuando llegue la respuesta del servidor no vamos a saber cual se las dos maquinas hizo la peticion, ya que ambas tienen el mismo socket. Para solucionarlo, debemos asignar un puerto distinto al filezilla del segundo computador. El mismo ejemplo para filezilla es valido para firefox tambien (no entiendo por qué no siguió con el ejemplo de firefox y lo cambió a filezilla).
Este ejemplo es extensible en la siguiente premisa: "NO PODEMOS ABRIR EL MISMO PUERTO EN DOS COMPUTADORES DISTINTOS CONECTADOS A LA MISMA RED"







Hola master, ya estoy finalizando este curso, pero he vuelto a este video porque me asalta una duda un tanto básica. He leído en numerosos foros que el acrónimo DNS se refiere a Domain Name System (o sea se refiere a la guía de telefonos en términos como lo has explicado tú) y no a Domain Name Server  (o sea al servidor de nombres de dominio) como has mencionado tu. Corrígeme si estoy equivocado, pero esto cobra sentido cuando todo el mundo habla de DNS server


ORIGEN:
En términos simples es la url del cliente.
Para desarrollos en local, la definicion de origen es protocolo+ip+puerto, con ip pudiendo ser localhost (q es lo mismo q escribir la ip de nuestro computador, o sea 172.algo...) o una ip de otra máquina en la que esté corriendo una api, por ejemplo.
Por ejemplo: http://localhost:9000 vs. http://localhost:8080 son origenes distintos

Para desarrollos en producción, la definicion de origen es protocolo+subdominio(opcional, pero si estuviera presente debe ser el mismo)+dominio secundario+top-leveldomain+puerto(opcional, pero si estuviera presente debe ser el mismo)+path(opcional, pero si estuviera presente debe ser el mismo)

Por ejemplo: https://www.google.com vs. https://www.api.google.com son origenes distintos, ya q para el segundo el subdominio está presente y no así para el primero
En http://www.example.com/dir/page.html vs. http://www.example.com/dir/page2.html en cambio, ambos tienen el mismo origen, ya que protocolo, dominio (example.com) y path (dir) son iguales



PUERTA DE ENLACE:
Una pasarela, puerta de enlace o gateway es un dispositivo (enrutador?) que permite interconectar redes con protocolos y arquitecturas diferentes a todos los niveles de comunicación. Su propósito es traducir la información del protocolo utilizado en una red al protocolo usado en la red de destino. El gateway o (puerta de enlace) es normalmente un equipo informático configurado para dotar a las máquinas de una red local (LAN) conectadas a él de un acceso hacia una red exterior, generalmente realizando para ello operaciones de traducción de direcciones IP (NAT: Network Address Translation). Esta capacidad de traducción de direcciones permite aplicar una técnica llamada IP Masquerading (enmascaramiento de IP), usada muy a menudo para dar acceso a Internet a los equipos de una red de área local compartiendo una única conexión a Internet, y por tanto, una única dirección IP externa. La dirección IP De un gateway (o puerta de enlace) a menudo se parece a 192.168.1.1 Ã³ 192.168.0.1 y utiliza algunos rangos predefinidos, 127.x.x.x, 10.x.x.x, 172.x.x.x, 192.x.x.x, que engloban o se reservan a las redes locales (véase red local). Además se debe notar que necesariamente un equipo que haga de puerta de enlace en una red, debe tener 2 tarjetas de red. La puerta de enlace, o más conocida por su nombre en inglés como "Default Gateway", es la ruta por defecto que se le asigna a un equipo y tiene como función enviar cualquier paquete del que no conozca por que interfaz enviarlo y no esté definido en las rutas del equipo, enviando el paquete por la ruta por defecto. En entornos domésticos se usan los routers ADSL como gateways para conectar la red local doméstica con la red que es Internet, si bien esta puerta de enlace no conecta 2 redes con protocolos diferentes, sÃ­ que hace posible conectar 2 redes independientes haciendo uso del ya mencionado NAT.

CONECTARSE A UN COMPUTADOR DE LA CASA DESDE FUERA

1.Tener contratado un servicio de  DDNS (dns dinámico). A diferencia del DNS tradicional en el que el nombre de dominio esta asociado a una ip manejada por el servidor de un proveedor (godaddy/hostgator), el DDNS el nombre de dominio esta asociado la ip publica de nuestra red local (de la casa).
2.Abrir un puerto en el router para la IP privada del computador.
Como alternativa al punto dos podemos activar en el router el DMZ (demilitarized zone), que deja pasar todo lo que le llega hacia una máquina (como un portero en una fiesta que no pregunta nada). Esto no tiene un control de seguridad por lo q puede ser peligroso.

CG-NAT (esta es la conexion q yo tengo en movistar)
Es cuando los proveedores de internet manejan ellos el router principal y no uno en la casa (ver imagen). Por ellos la ip de nuestra red publica no es unica ni exclusiva como hemos explicado en los casos anteriores, sino compartida con otras casas que tambien tienen este servivio CG-NAT. 
Esto genera problemas cuando necesitamos abrir puertos por ejemplo para programas como torrent, ya que como no disponemos de un router con ip publica unica no podemos abrir puertos en el router.

CONEXION INVERSA
Consiste en configurar un servidor en el medio de dos clientes para que se puedan conectar entre ellos. 
En este caso no importa que tengamos un CG-NAT o que no tengamos puerto, la conexion se realiza igual, por lo que es muy recomendable para conectarnos desde el exterior a un equipo de nuestra red cuando tenemos CG-NAT.

UPnP consiste en configurar en nuestro computador conectado a una red local para abrir un puerto en el router de forma de poder conectarnos desde fuera mediante socket. No funciona con CG-NAT, ya que no tenemos control sobre el router.  


Ejemplos prácticos
con ping+host (por ejemplo ping dominio) podemos saber la ippublica de un dominio (de google en este caso). En el navegador escribimos entonces el socket ippublica:80 y nos llevará a ese dominio.
Yo tengo conexion CG-NAT en mi casa en Madrid, y mi IPPublica la puedo ver en: https://www.cualesmiip.com/ , por lo que para abrir un puerto en este momento debo hacerlo por conexion inversa.

Localhost
La dirección loopback tiene una IP por defecto (127.0.0.1) útil para probar programas en tu ordenador, sin enviar información a través de Internet. Esto ayuda cuando estás probando aplicaciones que no están listas para que el mundo las vea.
Cuando llamas a una dirección IP desde tu ordenador, normalmente intentas contactar con otro ordenador a través de Internet. Sin embargo, con la dirección loopback, estás llamando al localhost, es decir, a tu ordenador sin ingresar siquiera a la red local, por lo que se utiliza la loopback IP en vez de la IP privada.
Por ello escribir en angular 127.0.0.1:4200/ es lo mismo que localhost:4200


MODELOS DE REDES
Para entender las partes de una red es importante entender modelo de capas OSI y TCP/IP. 
Cada una de estas capas funcionan en forma absolutamente aisladas las unas de las otras (como el envío de un libro de ua libreria de españa a mi casa en Chile)
Ver pantallazos.

La capa de enlace, que puede estar en un punto acceso wifi, en un switch o en el mismo router, se encarga de verificar que los datos que enviamos de un lugar a otro llegan bien.
La capa física es la señal wifi o un cable (de fibra óptica, por ejemplo). No el computador o un celular!
Cada capa cuenta con varios protocolos, que son reglas que deben seguirse para que la conexión sea exitosa. No todos los protocolos de una capa deben estar funcionando al mismo tiempo en una conexión, generalmente se trabaja con un protocolo por capa, co o el modelo TCP/IP que utiliza solo estos protocolos correspondientes a las capas transporte y red respectivamente.
En el emisor capa agrega un cierto numero de bits adicionales (overhead) con una cabecera para que pueda ser identificado por la misma capa en el receptor. Una vez que llega al receptor, la capa de enlace saca todo lo que hay dentro de la matriuska para verificar q esté todo bien (por ello hay un coste de performance/tiempo) y si todo esta bien retira la cabecera de la capa de enlace y el overhead de enlace, pasandolo a la capa siguiente que es la capa de red, que a su vez elimina cabecera y overhead y lo traspasa a la siguiente cabecera hasta llegar al computador del receptor.
En general hay un coste de performance/tiempo (overhead) cada vez que pasamos de un enlace a otro .
La capa 2 (enlace o data link en inglés) consta de dos conceptos: switch y mac address. La mac address es un codigo (numero de serie) de tarjeta de red que es único e irrepetible. 
En la capa de la matrioska que corresponde a la capa de enlace se agrega una cabecera con la mac address. La explicación del switch va orientada a una red donde varios computadores de la misma red se comunican al switch, pero no de redes distintas, como se explicó en videos anteriores.

