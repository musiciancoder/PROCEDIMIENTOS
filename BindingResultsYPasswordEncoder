PasswordEncoder y BindingResult son dos clases completamente diferentes entre sí. Ver clase EmailController del video 27
PasswordEncoder sive para codificar un String.
BindingResult sirve para ver que no hayan errores de escritura al llenar un campo

    @Autowired
    PasswordEncoder passwordEncoder;


//Aca el usuario cambia la contraseña. Es independiente del mail de recuperacion (no es secuencial, es decir no es que vaya el mail primero y cambie contraseña despues)
    @PostMapping("/change-password")
    public ResponseEntity<?> changePassword(@Valid @RequestBody ChangePasswordDTO dto, BindingResult bindingResult) {
        if (bindingResult.hasErrors()) {
            return new ResponseEntity(new Mensaje("Campos mal escritos"), HttpStatus.BAD_REQUEST);
        }
        if (!dto.getPassword().equals(dto.getConfirmPassword())) {
            return new ResponseEntity(new Mensaje("Las contraseñas no coinciden"), HttpStatus.OK);
        } //password y confirm password no son las mismas
        Optional<Usuario> usuarioOpt = usuarioService.getByTokenPassword(dto.getTokenPassword());
        if (!usuarioOpt.isPresent()) {
            
                return new ResponseEntity(new Mensaje("No existe ningun usuario con esas credenciales"), HttpStatus.NOT_FOUND);
            } //esto es porque el tokenPassword no es valido
            Usuario usuario = usuarioOpt.get();
            String newPassword = passwordEncoder.encode(dto.getPassword());
            usuario.setPassword(newPassword);
            usuario.setTokenPassword(null);
            usuarioService.save(usuario);
            return new ResponseEntity(new Mensaje("Contraseña actualizada"), HttpStatus.OK);
        }
