S3:

S3 es equivalente a google drive, tambien se puede almacenar contenido por URL, para despues compartir esas URL.
Para ello escribir S3 en la busqueda de AWS y dar click a crear bucket. En el bucket podemos subir archivos o descargarlos.
Para compartir lo que hay un bucket, dar click en "permisos" y desactivar lo que viene por defecto, para asi hacerlo publico.
Para mostrar un archivo, dar click en "acciones" y "abrir".

Crear Maquina Virtual:

1. Crear una nueva instancia en consola AWS (crear maquina virual, seleccionar la segunda opcion, que es la que ya tiene todo instalado). (Ya tenemos una clave pem, no es necesario crearla, por lo que no hay qie mover nada).
2. En putty copiar el ID de instancia (...algo.comute.amazonaws.com) y pegarlo en host (al lado del puerto)
3. Ir a auth (esquina superior izquierda en putty) y pegar la clave generada previamente con puttygen.
4.Ingresar con login ec2-user. Si no podemosingresarhay q generar otra clave con puttygen. Para ello abrir puttygen, pulsar load y cargar el pem. Estogenerar√° una nueva clave para usar en putty.
5. con sudo-i damos todos los permisos


Instalar mysql:


yum install mysql-server

chkconfig mysqld on

service mysqld start

mysqladmin -u root password Drooko2019.

mysql -uroot -p

Instalar java:

---------Java-----------

yum install java-1.8.0-openjdk

alternatives --config java

Desplegar un JAR:

En Spring tools suite, clickderecho sobre la aplicacion, click en maven install. Seleccionar una maquina virtual y subir el archivo JAR. luego que se ha subido, seleccionar el jar, click en acciones y hacerlo publico.
Luego, en putty escribir wget url del jar (copiar y pegar desde AWS). Luego escribir comando para desplegar spring: java -jar couponservice-0.0.1-SNAPSHOT.jar
Luego, asignar el puerto. Para ello seleccionamos la casilla de nuestra instancia en AWS y hacemos scroll hasta abajo, y en Security Groups,hacemosclick en el 'wizard', click en edit inbound rules, click en add new rule y asignamos el puerto q estamos ocupando, y en la casilla del lado (custom) hacer click en "anywhere"
Para probar en postman, cambiar la palabra 'localhost' en la barra de direcciones url por el public DNS (IPV4) (copiar y pegar desde AWS)

Configurar para q una aplicacion corra automaticamente cuando se inicie la instancia a la que pertenece:
Mover el jar de la aplicacion hacia el home con cp nombreAppp-0.0.1-SNAPSHOT.jar /home/ec2-user/
Editar el archivo de configuracion con vi /etc/rc.local  Al final del archivo escribir java -jar /home/ec2-user/nombreAppp-0.0.1-SNAPSHOT.jar (guardar con :wq).
En AWS detener la instancia y reiniciarla. pegar el DNS en la barra de direcciones de cualquier navegador y comprobar q la app esta corriendo.

Habilitar Load Balancer:

Esto es para que cuando recibamos demasiados request no se caiga la app. Para ello creamos un Load Balancer haciendo click en rquilibriadores de carga en el menu de la izquierda em AWS.
Sola hay que seleccionar dos instancias identicas en configuracion. Importante: No olvidar habilitar puerto 80 en el security group. No viene por defecto!

